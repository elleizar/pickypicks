{"version":3,"sources":["images/background.png","images/background2.png","images/favicon.ico","containers/HomePage.js","recipes.js","components/IngredientsInputs.js","containers/RecipesPage.js","containers/App.js","reportWebVitals.js","index.js"],"names":["HomePage","bg","background","background2","rand","Math","floor","random","length","className","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","src","logo","alt","to","recipeData","IngredientsInputs","useState","ingredient","inputList","setInputList","displayRecipes","setDisplayRecipes","e","m","recipes","getRecipes","error","setError","map","x","i","name","placeholder","value","onChange","index","target","list","handleInputChange","onClick","input","ingList","recList","cards","forEach","ing","includes","push","rec","ingredients","toLowerCase","randomIndex","currentIndex","slice","showRecipes","key","href","url","rel","width","height","image","onError","event","RecipesPage","Component","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7f2db3e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.49c9b694.png\";","export default __webpack_public_path__ + \"static/media/background2.209ad19f.png\";","export default __webpack_public_path__ + \"static/media/favicon.40dcef5f.ico\";","import { Link } from 'react-router-dom';\r\nimport background from '../images/background.png';\r\nimport background2 from '../images/background2.png';\r\nimport logo from '../images/favicon.ico';\r\nimport '../css/Home.css';\r\n\r\nexport const HomePage = () => {\r\n  const bg = [background, background2];\r\n  const rand = Math.floor(Math.random() * (bg.length - 0));\r\n\r\n  return (\r\n    <div className=\"HomePage\" style={{\r\n      backgroundImage: `url(${bg[rand]})`,\r\n      backgroundPosition: 'right bottom',\r\n      backgroundSize: 'contain',\r\n      backgroundRepeat: 'no-repeat'\r\n    }}>\r\n      <div className=\"home-header-container\">\r\n        <img src={logo} className=\"home-logo\" alt=\"bg\" />\r\n        <div className=\"home-text\">\r\n          <h1 className=\"home-header\">\r\n            PICKY PICKS\r\n          </h1>\r\n          <h2 className=\"home-subheader\">\r\n            for picky eaters\r\n          </h2>\r\n        </div>\r\n      </div>\r\n      <p className=\"body-text\">\r\n        Have ingredients that you love but don't know what to make of them? <em>pickypicks</em> will picky pick some recipes for you!\r\n      </p>\r\n      <br />\r\n      <Link to='/recipes'>\r\n        <button\r\n          className=\"getButton\">\r\n          Get Recipes!\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  )\r\n}","import * as data from './recitems.json'\r\nexport const recipeData = data.default\r\n","import React, { useState } from \"react\";\r\nimport { recipeData } from \"../recipes\";\r\nimport logo from '../images/favicon.ico';\r\n\r\nexport const IngredientsInputs = () => {\r\n  const [inputList, setInputList] = useState([{ ingredient: \"\" }]);\r\n  const [displayRecipes, setDisplayRecipes] = useState(false);\r\n  const [recipes, getRecipes] = useState({ e: false, m: \"\" });\r\n  const [error, setError] = useState({ e: false, m: \"\" });\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { ingredient: \"\" }]);\r\n  };\r\n\r\n  const showRecipes = (input) => {\r\n    let ingList = [];\r\n    let recList = [];\r\n    let cards = [];\r\n\r\n    // create list of ingredients\r\n    input.forEach((ing) => {\r\n      if (ing.ingredient.length) {\r\n        if (!ingList.includes(ing.ingredient)) {\r\n          ingList.push(ing.ingredient);\r\n        }\r\n      }\r\n    });\r\n\r\n    // check if ingredient in list is in recipe\r\n    ingList.forEach((ing) => {\r\n      recipeData.forEach((rec) => {\r\n        if (rec.ingredients.toLowerCase().includes(ing.toLowerCase())) {\r\n          if (!recList.includes(rec)) {\r\n            //push into recList if yes and not a duplicate\r\n            recList.push(rec);\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    if (recList.length > 0) { // show cards if recList has recipes\r\n      setDisplayRecipes(true);\r\n      setError({ e: false, m: \"\" });\r\n    }\r\n    else { // show error\r\n      setDisplayRecipes(false);\r\n      setError({ e: true, m: \"No recipes for the corresponding ingredient(s).\" });\r\n    }\r\n\r\n    // shuffle and randomly get 3 recipes from recList to display\r\n    if (recList.length > 3) {\r\n      let currentIndex = recList.length;\r\n      let randomIndex;\r\n\r\n      while (currentIndex !== 0) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n        [recList[currentIndex], recList[randomIndex]] = [recList[randomIndex], recList[currentIndex]];\r\n      }\r\n\r\n      cards = recList.slice(0, 3);\r\n      getRecipes(cards);\r\n    }\r\n    else {\r\n      getRecipes(recList);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-form\">\r\n        <div className=\"input-form-container\">\r\n          {inputList.map((x, i) => {\r\n            return (\r\n              <div className=\"input-ingredient\">\r\n                <input\r\n                  name=\"ingredient\"\r\n                  placeholder=\"Enter ingredient\"\r\n                  value={x.ingredient}\r\n                  onChange={e => handleInputChange(e, i)}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div>\r\n            {inputList.length < 3 && <button className=\"add-button\" onClick={handleAddClick}>+</button>}\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <button className=\"get-button\" onClick={e => showRecipes(inputList)}>Get Recipes!</button>\r\n      </div>\r\n\r\n      {/* error */}\r\n      {error.e &&\r\n        <div className=\"error-message\">\r\n          {error.m}\r\n        </div>\r\n      }\r\n\r\n      {displayRecipes &&\r\n        <div className=\"tip\">\r\n          Don't like these recipes? Click Get Recipes again!\r\n        </div>\r\n      }\r\n      <div className=\"recipe-container\">\r\n        {/* recipe card */}\r\n        {displayRecipes && recipes.map((rec, key) => {\r\n          return (\r\n            <div className=\"recipe-card\" key={key}>\r\n              <a className=\"recipe-url\" href={rec.url} target=\"_blank\" rel=\"noreferrer\">\r\n                {/* check if image exists, else replace with logo */}\r\n                <img\r\n                  className=\"recipe-image\"\r\n                  width=\"320px\"\r\n                  height=\"250px\"\r\n                  src={rec.image}\r\n                  alt={rec.name}\r\n                  onError={(event) => {\r\n                    event.target.src = logo\r\n                    event.onError = null\r\n                  }}\r\n                />\r\n                <br />\r\n                <div className=\"recipe-name\">{rec.name}</div>\r\n                <br />\r\n                <div className=\"recipe-ing-header\">\r\n                  Ingredients\r\n                </div>\r\n                <div className=\"recipe-ingredients\">{rec.ingredients}</div>\r\n              </a>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { Component } from \"react\";\r\nimport { IngredientsInputs } from \"../components/IngredientsInputs\";\r\nimport '../css/Recipes.css';\r\n\r\nexport class RecipesPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"RecipesPage\">\r\n        <h1 className=\"recipes-header\">\r\n          INPUT INGREDIENTS!\r\n        </h1>\r\n        <p className=\"instructions\">\r\n          Add up to 3 ingredients you love to find recipes with them.\r\n        </p>\r\n        <IngredientsInputs/>\r\n      </div>\r\n    )\r\n  }\r\n}","import { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport { HomePage } from './HomePage';\nimport { RecipesPage } from './RecipesPage';\nimport '../css/App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route path=\"/recipes\" >\n          <RecipesPage />\n        </Route>\n      </Switch>\n    </Router >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}